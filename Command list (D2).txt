>>> from chitchat.models import *

1. Создать двух пользователей (с помощью метода User.objects.create_user('username'))
>>> user1 = User.objects.create_user(username='Vasiliy')
>>> user2 = User.objects.create_user(username='JohnDoe')
>>> User.objects.all()
<QuerySet [<User: Vasiliy>, <User: JohnDoe>]>

2. Создать два объекта модели Author, связанные с пользователями
>>> Author.objects.create(authorUser=user1)
>>> Author.objects.create(authorUser=user2)
>>> Author.objects.all()
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>]>

3. Добавить 4 категории в модель Category
>>> Category.objects.create(name='Policy')
>>> Category.objects.create(name='Science')
>>> Category.objects.create(name='Sport')
>>> Category.objects.create(name='Weather')
>>> Category.objects.all()
<QuerySet [<Category: Category object (1)>, <Category: Category object (2)>, <Category: Category object (3)>, <Category: Category object (4)>]>

4. Добавить 2 статьи и 1 новость
>>> auth1 = Author.objects.all()[0]
>>> auth2 = Author.objects.get(id=2)
>>> Post.objects.create(author=auth1, post_type='N', title='Space weather news', text='Space Weather disruptions show as large spikes. Space Weather calm shows as smooth curves. KP Index [0-3] Green - Stable/Calm Magnetosphere. [4] Yellow - Unstable Magnetosphere. ... This TEC chart is from the German Space Weather Application Center. With dozens of similar charts online. Outgoing Longwave Radiation (OLR) has moved to QuakeWatch.net. The Three D-RAP Charts above show Atmosphere and Ionosphere Effect from Space Weather.')
>>> Post.objects.create(author=auth2, post_type='A', title='EU drugs agency evaluates potential coronavirus treatment', text='The European Medicines Agency said Th ursday it will start a rolling review of remdesivir, an investigational therapy for Covid-19 originally developed by drugmaker Gilead to treat Ebola. The announcem ent from Europe’s top medicines body is likely to add momentum to the drug, signaling that regulators are taking the prospects of this potential therapy for the co ronavirus seriously. Rather than wait for the U.S. pharmaceutical company to collect all of its clinical data in one regulatory submission, the EMA said it will review the information as it comes along')
>>> Post.objects.create(author=auth1, post_type='A', title='The family of five flying around the world in a tiny plane', text='Spending over a year flying around the world with your family in a tiny single-engine aircraft is something most people could only imagine. But it’s very much the reality for the Porters, from Canada, who are currently around halfway through a 14-month circumnavigation of the world. Ian Porter, who has been a private pilot for around four decades, his wife Michelle, daughters Samantha, 21 and Sydney, 18, who also happen to be qualified pilots, and son Christopher, 15, set off from Vancouver on June 15, 2022')
>>> Post.objects.all()
<QuerySet [<Post: Post object (1)>, <Post: Post object (2)>, <Post: Post object (3)>]>

5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий)
>>> post1 = Post.objects.all()[0]
>>> post1.post_category.add(Category.objects.get(id=4))
>>> post1.post_category.add(Category.objects.get(id=2))
>>> post2 = Post.objects.get(id=2)
>>> post2.post_category.add(Category.objects.get(id=1))
>>> Post.objects.get(id=3).post_category.add(Category.objects.get(id=3))
>>> Post.objects.get(id=3).post_category.add(Category.objects.get(id=2))
>>> Post.objects.get(id=3).post_category.add(Category.objects.get(id=4))
>>> Post.objects.get(id=3).post_category.all()
<QuerySet [<Category: Category object (3)>, <Category: Category object (2)>, <Category: Category object (4)>]>

6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий)
>>> Comment.objects.create(post_comment=post1, user_comment=auth1.authorUser, comment='It is quite intresting information, I would say.')
>>> Comment.objects.create(post_comment=post1, user_comment=auth2.authorUser, comment='marvellous')
>>> Comment.objects.create(post_comment=post2, user_comment=auth1.authorUser, comment='Senseless')
>>> Comment.objects.create(post_comment=Post.objects.get(id=3), user_comment=Author.objects.get(id=1).authorUser, comment='Cool travel')
>>> Comment.objects.all()
<QuerySet [<Comment: Comment object (1)>, <Comment: Comment object (2)>, <Comment: Comment object (3)>, <Comment: Comment object (4)>]

7. Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов
>>> Post.objects.get(id=1).like()
>>> Post.objects.get(id=1).like()
>>> Post.objects.get(id=2).dislike()  
>>> Post.objects.get(id=2).dislike()
>>> Post.objects.get(id=2).dislike()
>>> Post.objects.get(id=3).dislike() 
>>> Post.objects.get(id=3).like()    
>>> Post.objects.get(id=3).like()
>>> Comment.objects.get(id=1).like()
>>> Comment.objects.get(id=2).like()  
>>> Comment.objects.get(id=3).dislike() 
>>> Comment.objects.get(id=3).dislike()
>>> Comment.objects.get(id=4).like()

8. Обновить рейтинги пользователей
>>> Author.objects.get(id=1).update_rating()
>>> Author.objects.get(id=1).ratingAuthor
>>> Author.objects.get(id=2).update_rating()
>>> Author.objects.get(id=2).ratingAuthor

9. Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта)
>>> Author.objects.order_by('-ratingAuthor').values('authorUser__username', 'ratingAuthor')[0]

10. Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье
>>> Post.objects.order_by('-rating').values('time_creation', 'author__authorUser__username', 'rating', 'title')
>>> Post.objects.order_by('-rating')[0].preview()

11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье
>>> Post.objects.order_by('-rating')[0].comment_set.all().values('time_creation', 'user_comment__username', 'rating', 'comment')




